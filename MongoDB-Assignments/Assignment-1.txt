Assignment - 1


Query/Find Documents

1. db.movies.find()
2. db.movies.find(writer:"Quentin tarantino")
3. db.movies.find({actors:"Brad Pitt"})
4. db.movies.find({franchise:"The Hobbit"})
5. db.movies.find({year:{$gte:1990,$lt:2000}})                                                                       OR                                                                                                                   db.movies.find({$and: [{year: {$gt: 1900}}, {year: {$lt: 2000}}]}).pretty()
6. db.movies.find({$or:[{year:{$gt:2010}},{year:{$lt:2000}}]})

Update Documents

1. db.movies.update({title:"The Hobbit: An Unexpected Journey"},{$set:{synopsis:"A reluctant hobbit Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their maintain home and the gold within it from the dragon Smaug."}})
2. db.movies.update({title:"The Hobbit: The Desolation of Smaug"},{$set:{synopsis:"The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."}})
3. db.movies.update({title:"Pulp Fiction"},{$addToSet:{actors:"Samuel L. Jackson"}})
OR
db.movies.update({"title":"Pulp Fiction"},{$push:{"actors":"Samuel L.Jackson"}})


Text Search

db.movies.createIndex( { synopsis: "text" }
1. db.movies.find({$text:{$search:"Bilbo"}}).pretty()
2. db.movies.find({$text:{$search:"Gandalf"}}).pretty()
3. db.movies.find({$text:{$search:"Bilbo -Gandalf"}}).pretty()
4. db.movies.find({$text:{$search:"dwarves hobbit"}}).pretty()
5. db.movies.find( { $text: { $search: "\"gold\" dragon" } } ).pretty()


Delete Documents

1. db.movies.deleteOne({title:"Pee Wee Herman's Big Adventure"})
2. db.movies.deleteOne({title:"Avatar"})




Querying Related collections

1. db.users.find().pretty()
2. db.posts.find().pretty()
3. db.posts.find({username:"GoodGuyGreg"}).pretty()
4. db.posts.find({username:"ScumbagSteve"}).pretty()
5. db.comments.find().pretty()
6. db.comments.find({username:"GoodGuyGreg"}).pretty()
7. db.comments.find({username:"ScumbagSteve"}).pretty()
8. db.comments.find({post: db.posts.findOne({title: "Reports a bug in your code"})._id.valueOf()})
