ES6 Assignment-2


1.  
class Fibonacci{
    #previousNo = 0;
    #currentNo = 1;
    next(){
        let c = this.#previousNo + this.#currentNo;
        this.#previousNo = this.#currentNo;
        this.#currentNo = c;
        return c;
    }
}


const fib = new Fibonacci();
console.log(fib.next());


2.  
function checkArmstrong(n){
    let a;
    let l = n.toString().length;
    let m=n;
    let k=l;
    let temp = 0;
    while(k>0){
        a = m%10;
        m = Math.floor(m/10);
        temp+=(a**l);
        k--;
    }
    if (temp == n) {
        return 1;
    }
    else{
        return 0;
    }
}


let i=0;


function getnextArmstrong(){
    while (i<Number.MAX_SAFE_INTEGER){
        i++;
        if(checkArmstrong(i)){
             return i;
        }
    }
}


3.  
function checkArmstrong(n){
    let l = n.toString().length;
    let a;
    let m=n;
    let k=l;
    let temp = 0;
    while(k>0){
        a = m%10;
        m = Math.floor(m/10);
        temp+=(a**l);
        k--;
    }
    if (temp == n) {
        return 1;
    }
    else{
        return 0;
    }
}
 
let i=0;


function reset(){
    i = 0;
    return i;
}
 
function getnextArmstrong(){
    while (i<10000){
        if(i<1000){
            i++;
            if(checkArmstrong(i)){
                return i;
            }
        }
        else{
            reset();
            return "Error!, number above 1000.";
        }  
    }
}


4.   
const chatroom1 = new Map();
chatroom1.set('user1', 'Hello');
chatroom1.set('user2', 'How are you');
chatroom1.set('user3', 'Wassup');
console.log(chatroom1);


const chatroom2 = new Map();
chatroom2.set('Abc', 'What\'s happening?');
chatroom2.set('Def', 'Where are you from?');
chatroom2.set('Ghi', 'Great!');
console.log(chatroom2);


function allUsers(chatroomName){
    chatroomName.forEach((value, key) => {
        console.log(`${key}`)
      })
}


function allMessages(chatroomName){
    chatroomName.forEach((value,key) => {
        console.log(`${value}`)
      })
}


allUsers(chatroom1);
allMessages(chatroom1);


allUsers(chatroom2);
allMessages(chatroom2);